/*
Velo Payments APIs

Testing TransactionsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package velopayments

import (
	"context"
	"os"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_velopayments_TransactionsAPIService(t *testing.T) {

	configuration := NewConfiguration()
	configuration.Servers = ServerConfigurations{
		{
			URL:         os.Getenv("APIURL"),
			Description: "Velo Payments for testing",
		},
	}
	apiClient := NewAPIClient(configuration)

	t.Run("Test TransactionsAPIService CreateTransactionV1", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.TransactionsAPI.CreateTransactionV1(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TransactionsAPIService GetTransactionByIdV1", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var transactionId string

		resp, httpRes, err := apiClient.TransactionsAPI.GetTransactionByIdV1(context.Background(), transactionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TransactionsAPIService GetTransactions", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.TransactionsAPI.GetTransactions(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
